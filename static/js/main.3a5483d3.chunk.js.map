{"version":3,"sources":["hooks/useGiphy.ts","components/TextField/TextField.styled.ts","components/TextField/TextField.tsx","components/Button/Button.styled.ts","components/Button/Button.tsx","components/ButtonSwitcher/ButtonSwitcher.tsx","components/ComplexImage/ComplexImage.styled.ts","components/ComplexImage/ComplexImage.tsx","hooks/useTextFieldWithFilter.ts","pages/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useGiphy","api_key","useState","images","setImages","load","tags","url","tag","NOT_FOUND","Promise","resolve","reject","promises","map","fetch","then","response","json","all","jsons","filter","data","image_url","length","ids","id","srcs","complex","img","newImages","catch","reason","clear","group","Map","forEach","image","i","replaced","get","set","Array","from","entries","StyledTextField","styled","input","attrs","props","type","TextField","other","StyledButton","button","disabled","css","primary","secondary","Button","children","ButtonSwitcher","on","off","switched","onSwitch","switchedState","setSwitchedState","onClick","MAX_WIDTH","StyledComplexImageContainer","div","ComplexImage","showTag","link","key","src","alt","useTextFieldWithFilter","value","setValue","bind","onChange","e","target","MainPage","giphy","loading","setLoading","grouped","setGrouped","textFieldWithFilter","text","replaceAll","toLowerCase","useEffect","timer","setTimeout","randomTag","Math","floor","random","alert","clearTimeout","onImageClick","className","placeholder","split","group_index","onLoad","reduce","acc","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a5483d3.chunk.js","sourcesContent":["import {useState} from \"react\";\n\ntype Image = {\n  ids: string[],\n  srcs: string[],\n  tags: string[],\n  complex: boolean,\n}\n\nconst useGiphy = (api_key: string) => {\n\n  const [images, setImages] = useState<Image[]>([]);\n\n  const load = (...tags: string[]) => {\n    const url = (tag: string) => `https://api.giphy.com/v1/gifs/random?api_key=${api_key}&tag=${tag}`;\n\n    const NOT_FOUND = 'По тегу ничего не найдено';\n\n    return new Promise((resolve, reject) => {\n      const promises = tags.map(tag => fetch(url(tag))\n        .then(response => response.json())\n        .then(json => ({tag, ...json})));\n\n      Promise.all(promises)\n        // .then(responses => Promise.all(responses.map(response => response.json())))\n        .then(jsons => jsons.filter(json => json.data.image_url))\n        .then(jsons => {\n          if (jsons.length !== promises.length) {\n            throw NOT_FOUND;\n          }\n          return jsons;\n        })\n        .then(jsons => ({\n          ids: jsons.map(json => json.data.id),\n          srcs: jsons.map(json => json.data.image_url),\n          tags: jsons.map(json => json.tag),\n          complex: tags.length > 1,\n        }))\n        .then(img => {\n            const newImages = [img, ...images];\n            setImages(newImages);\n            resolve(newImages);\n          }\n        )\n        .catch(reason => {\n          reject(reason === NOT_FOUND ? reason : 'Произошла HTTP ошибка');\n        });\n    });\n  };\n\n  const clear = () => {\n    setImages([]);\n  };\n\n  const group = () => {\n    const map = new Map();\n\n    images.forEach(image => (\n      image.tags.forEach((tag, i) => {\n          const ids = [image.ids[i]];\n          const srcs = [image.srcs[i]];\n          const tags = [image.tags[i]];\n\n          const replaced = {...image, ids, srcs, tags};\n\n          map.get(tag) ?\n            map.set(tag, [...map.get(tag), replaced]) :\n            map.set(tag, [replaced]);\n        }\n      )));\n\n    return Array.from(map.entries());\n  };\n\n  return {\n    images,\n    load,\n    clear,\n    group,\n  };\n};\n\nexport default useGiphy;","import styled from \"styled-components\";\n\nexport const StyledTextField = styled.input.attrs(props => ({\n  type: 'text',\n}))`\n  padding: 5px 10px;\n  font-size: 15px;\n  border: 1px solid #eaeaea;\n  border-radius: 3px;\n  flex: 1;\n`;","import React, {InputHTMLAttributes} from \"react\";\nimport {StyledTextField} from \"./TextField.styled\";\n\nfunction TextField(props: InputHTMLAttributes<HTMLInputElement>) {\n  const {type, ...other} = props;\n\n  return (\n    <StyledTextField {...other} />\n  );\n}\n\nexport default TextField;","import styled, {css} from \"styled-components\";\nimport {ButtonProps} from './Button.d';\n\nexport const StyledButton = styled.button<ButtonProps>`\n  border: none;\n  background: #eeeeee;\n  outline: none;\n  color: rgb(63, 69, 74);\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: 0.1s;\n  margin-right: 5px;\n  margin-bottom: 5px;\n\n  ${props => !props.disabled && css`\n    &:hover {\n      opacity: 0.8;\n    }\n\n    &:active {\n      opacity: 0.7;\n    }\n  `}\n\n  ${props => props.primary && css`\n    background: rgb(0, 108, 255);\n    color: white;\n  `}\n\n  ${props => props.secondary && css`\n    background: rgb(255, 0, 103);\n    color: white;\n  `}\n\n  ${props => props.disabled && css`\n    color: #b8b8b8;\n    background: rgb(241, 241, 241);\n    cursor: auto;\n  `}\n`;","import React from \"react\";\nimport {ButtonProps} from './Button.d'\nimport {StyledButton} from \"./Button.styled\";\n\nfunction Button(props: ButtonProps) {\n  return (\n    <StyledButton {...props}>\n      {props.children}\n    </StyledButton>\n  );\n}\n\nexport default Button;","import React, {useState} from \"react\";\nimport Button from \"../Button/Button\";\nimport {ButtonSwitcherProps} from './ButtonSwitcher.d'\n\nfunction ButtonSwitcher(props: ButtonSwitcherProps) {\n  const {on, off, switched, onSwitch, ...other} = props;\n\n  const [switchedState, setSwitchedState] = useState(switched ?? false);\n\n  const onClick = () => {\n    onSwitch && onSwitch();\n    setSwitchedState(!switchedState);\n  }\n\n  return <Button {...other} onClick={onClick}>{switchedState ? on : off}</Button>\n}\n\nexport default ButtonSwitcher;","import styled from \"styled-components\";\n\nconst MAX_WIDTH = '200px';\nconst MAX_HEIGHT = '200px';\n\nexport const StyledComplexImageContainer = styled.div`\n  max-width: ${MAX_WIDTH};\n  display: inline-block;\n  padding: 5px;\n  border: 1px solid #eaeaea;\n\n  & * {\n    max-width: ${MAX_WIDTH};\n    max-height: ${MAX_HEIGHT};\n    cursor: pointer;\n  }\n`;","import React from \"react\";\nimport {ComplexImageProps} from './ComplexImage.d';\nimport {StyledComplexImageContainer} from './ComplexImage.styled';\n\nfunction ComplexImage(props: ComplexImageProps) {\n  const {ids, srcs, tags, showTag, ...other} = props;\n\n  return (\n    <StyledComplexImageContainer>\n      {srcs.length > 1 ?\n        srcs.map((link, i) => (\n          <img {...other} key={ids[i]} src={link} alt={link} onClick={() => showTag(tags[i])}/>\n        )) :\n        <img {...other} key={ids[0]} src={srcs[0]} alt={srcs[0]} onClick={() => showTag(tags[0])}/>}\n    </StyledComplexImageContainer>\n  );\n}\n\nexport default ComplexImage;","import {useState} from \"react\";\n\nfunction useTextFieldWithFilter(filter: (_: string) => string) {\n  const [value, setValue] = useState('');\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(filter(e.target.value));\n  };\n\n  return {\n    bind: {\n      value,\n      onChange,\n    },\n    value,\n    setValue,\n  };\n}\n\nexport default useTextFieldWithFilter;","import React, {useEffect, useState} from \"react\";\nimport '../scss/index.scss';\n\nimport useGiphy from \"../hooks/useGiphy\";\nimport TextField from \"../components/TextField/TextField\";\nimport Button from \"../components/Button/Button\";\nimport ButtonSwitcher from \"../components/ButtonSwitcher/ButtonSwitcher\";\nimport ComplexImage from \"../components/ComplexImage/ComplexImage\";\nimport useTextFieldWithFilter from \"../hooks/useTextFieldWithFilter\";\n\nfunction MainPage() {\n  const giphy = useGiphy('gTJAO48YcpmrADUyo4opy4ES4g7iDBxx');\n\n  const [loading, setLoading] = useState(false);\n  const [grouped, setGrouped] = useState(false);\n\n  const textFieldWithFilter = useTextFieldWithFilter((text) => text\n    .replaceAll(/[^A-Za-z,]/g, '')\n    .replaceAll(/,+/g, ',')\n    .toLowerCase());\n\n  useEffect(() => {\n    if (textFieldWithFilter.value !== 'delay') {\n      return;\n    }\n\n    const delay = () => {\n      const tags = ['cat', 'dog', 'mouse', 'frog', 'human'];\n      const randomTag = tags[Math.floor(Math.random() * (tags.length - 1))];\n\n      setLoading(true);\n      giphy.load(randomTag).catch(reason => {\n        alert(reason);\n        setLoading(false);\n      });\n    };\n\n    const timer = setTimeout(delay, 5000);\n\n    return () => clearTimeout(timer);\n  }, [giphy, textFieldWithFilter]);\n\n  const load = () => {\n    if (!textFieldWithFilter.value) {\n      alert('Заполните поле \"Тег\"');\n      return;\n    }\n\n    setLoading(true);\n    textFieldWithFilter.setValue('');\n    giphy.load(...textFieldWithFilter.value.split(',')).catch(reason => {\n      alert(reason);\n      setLoading(false);\n    });\n  };\n\n  const clear = () => {\n    giphy.clear();\n    setLoading(false);\n    textFieldWithFilter.setValue('');\n  };\n\n  const switchGrouped = () => {\n    setGrouped(!grouped);\n  };\n\n  const onImageClick = (tag: string) => {\n    textFieldWithFilter.setValue(tag);\n  };\n\n  return (\n    <div className='page-container'>\n      <div className='page-controls'>\n        <TextField {...textFieldWithFilter.bind} placeholder='Введите теги через запятую'/>\n\n        <div className='buttons'>\n          <Button primary disabled={loading} onClick={load}>{loading ? 'Загрузка...' : 'Загрузить'}</Button>\n          <Button secondary onClick={clear}>Очистить</Button>\n          <ButtonSwitcher on={'Разгруппировать'} off={'Группировать'} onSwitch={switchGrouped}/>\n        </div>\n      </div>\n\n      <div className='images-grid'>\n        {grouped ? giphy.group().map(([tag, images], group_index) => (\n          <div key={group_index} className='group'>\n            <h4>{tag}</h4>\n            <div className='group-container'>\n              {images.map((image: any, i: number) => (\n                <ComplexImage\n                  ids={image.ids}\n                  showTag={onImageClick}\n                  onLoad={() => setLoading(false)}\n                  key={image.ids.reduce((acc: string, id: string) => acc + id, '')}\n                  srcs={image.srcs}\n                  tags={image.tags}/>\n              ))}\n            </div>\n          </div>\n        )) : giphy.images.map(image => (\n          <ComplexImage\n            ids={image.ids}\n            showTag={onImageClick}\n            onLoad={() => setLoading(false)}\n            key={image.ids.reduce((acc: string, id: string) => acc + id, '')}\n            srcs={image.srcs}\n            tags={image.tags}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;","import React from 'react';\nimport MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  return <MainPage />\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}